name: service-api-plugin
description: This plugin allows you to quickly create a base structure of a service that communicates with an API.
display-name: Service API Plugin
picture: plugin.png
category: frontend
compatibility:
<<<<<<< HEAD
 technologies:
  - "Angular"
  - "Web"
=======
  - angular
>>>>>>> 4016a2a4530af7e068d2807809c3a859973f2edc
about: docs/about.md
usage: docs/usage.md
use-case: docs/use-case.md
implementation: docs/implementation.md
technologies:
  - "Angular"
<<<<<<< HEAD
  - "Api"
  - "Rest"
  - "Typescript"
=======
  - "Web"
>>>>>>> 4016a2a4530af7e068d2807809c3a859973f2edc
types:
  - app
inputs:
  - label: What is the api host?
    type: text
    name: api_host
    default: localhost
  - label: What is the host port?
    type: int
    name: api_port
    default: 3000
  - label: What is the host resource name? (please input name in single)
    type: text
    name: resource_name
    default: "pet"
  - label: What is the path where the component will be create?
    type: text
    name: component_path
    default: src/app/
  - label: Do you want configure http module?
    type: bool
    name: config_module
    default: false
computedInputs:
  "resource_pascalcase": "{{ resource_name | pascalcase }}"
  "resource_camelcase": "{{ resource_name | camelcase }}"
  "resource_name": "{{ resource_name | replace(' ', '-')}}"
  "service_filename": "{{ resource_name | replace(' ', '-')}}"
  "service_classname": "{{ resource_pascalcase + 'Service'}}"
  "component_path": "{{ inputs.component_path + computed_inputs.service_filename }}"

  "get_list": "{{ 'get' + (resource_pascalcase + 's') | pascalcase}}"
  "get_item": "{{ 'get' + (resource_pascalcase | pascalcase) + 'ById' }}"
  "save_item": "{{ 'save' + (resource_pascalcase | pascalcase) }}"
  "edit_item": "{{ 'edit' + (resource_pascalcase | pascalcase) }}"
  "remove_item": "{{ 'remove' + (resource_pascalcase | pascalcase) }}"
hooks:
  - type: code-transformation
    trigger: after-render
    working-dir: "{{target_path}}"
    path: src/app/app.module.ts
    code-transformation:
      typescript:
        import:
          - insert: >
              import { HttpClientModule } from '@angular/common/http';
        annotation:
          - NgModule:
              - attribute: imports
                insert: >
                  HttpClientModule
    condition:
      variable: config_module
      operator: "=="
      value: true